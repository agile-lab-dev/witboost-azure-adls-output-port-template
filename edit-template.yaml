apiVersion: witboost.com/v1
kind: EditTemplate
metadata:
  name: edit-azure-outputport-adlsgen2-template.1
  title: ADLS Gen2 Output Port Edit Template
  description: Updates an Output Port based on a directory located on an ADLS Gen2 Storage Account
  mesh:
    icon: https://cdn-images-1.medium.com/v2/resize:fit:914/1*iYJgfYgxDWBcfWjl1twsag.png
  tags:
    - azure
    - adlsgen2
    - outputport
    - edit
spec:
  owner: agilelab
  useCaseTemplateId:
    - urn:dmb:utm:azure-outputport-adlsgen2-template:0.0.0
  parameters:
    - title: Update Output Port
      description: |
        This wizard will allow you to edit the metadata for a previously created Output Port.
        
        Most metadata is editable but some (like the name, domain, data product etc) are not; their fields will be read-only.
        
        Some of the files in the component's repository cannot be updated by this wizard, namely:
        - **Documentation**: `README.md`, `docs/index.md`, etc
        - **CI/CD**: `.gitlab-ci-yaml`
        You need to take care of updating these yourself, as given their nature it's hard to do automatically and they are often edited manually after the component's creation.

    - title: Update component metadata
      required:
        - description
        - dependencies
      properties:
        name:
          title: Name
          type: string
          description: Required name used for display purposes
          ui:disabled: true
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        domain:
          title: Domain
          type: string
          description: Domain of the Data Product this component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds: 
              - Domain
          ui:disabled: true
        dataproduct:
          title: Data Product
          type: string
          description: Data Product this Workload belongs to
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds: 
              - System
          ui:disabled: true
        identifier:
          title: Identifier
          type: string
          description: A unique identifier for the entity inside the domain. It will not be editable after creation and is expected to be a string that is sequences of [a-zA-Z] separated by any of [-_]
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        developmentGroup:
          title: Development Group
          type: string
          description: Data Product development group
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependencies:
          type: object
          ui:options:
            displayTitle: false
          required:
            - dependsOn
            - containerList
          properties:
            dependsOn:
              title: Storage component dependency
              description: ADLS Gen2 Output Ports must depend on an ADLS Gen2 Storage Area in order to extract the storage account and container information
              type: string
              ui:field: EntityRelationsPicker
              ui:fieldName: dataproduct
              relation: hasPart
              ui:filters:
                - key: spec.mesh.useCaseTemplateId
                  value: "urn:dmb:utm:azure-storage-adlsgen2-template:0.0.0"
            containerList:
              ui:widget: hidden
              title: Container list
              ui:field: EntitySelectionPicker
              ui:fieldName: dependencies.dependsOn
              ui:property: spec.mesh.specific.containers
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: [ ]
          items:
            type: string

    - title: Terms & Conditions and SLA
      description: Terms & Conditions and Service Level Agreement information for this component.
      required:
        - termsAndConditions
        - intervalOfChange
        - timeliness
        - upTime
      properties:
        termsAndConditions:
          title: Terms and Conditions
          type: string
          description: Required. Terms and Conditions that apply to the data.
          default: Can be used for production purposes.
        intervalOfChange:
          title: Interval of change
          type: string
          description: Required. How often the data is refreshed.
          default: 2BD
        timeliness:
          title: Timeliness
          type: string
          description: Required. Timeliness of the data.
          default: 2BD
        upTime:
          title: Uptime
          type: string
          description: Required. Uptime of the Output Port.
          default: 99.9%

    - title: Data Sharing Agreement
      description: Update the Data Sharing Agreement clauses for this component.
      required:
        - purpose
        - billing
        - security
        - intendedUsage
        - limitations
        - lifeCycle
        - confidentiality
      properties:
        purpose:
          title: Purpose
          type: string
          description: Required. Purpose of the data.
          default: Foundational data for downstream use cases.
        billing:
          title: Billing
          type: string
          description: Required. Billing applied to data usage.
          default: None.
        security:
          title: Security
          type: string
          description: Required. Security policies that apply to the data.
          default: Platform standard security policies.
        intendedUsage:
          title: Intended Usage
          type: string
          description: Required. Intended usage for the data.
          default: Any downstream use cases.
        limitations:
          title: Limitations
          type: string
          description: Required. Limitations of the data.
          default: Needs joining with other datasets (eg customer data) for most analytical use cases.
        lifeCycle:
          title: Lifecycle
          type: string
          description: Required. Lifecycle of the data.
          default: Data loaded every two days and typically never deleted.
        confidentiality:
          title: Confidentiality
          type: string
          description: Required. Confidentiality of the data.
          default: None.

    - title: Data contract schema
      description: Definition of the columns of the table. Primitive data types supported.
      properties:
        schemaDefinition:
          type: object
          ui:options:
            displayTitle: false
          properties:
            schemaColumns:
              title: Column Definitions
              type: array
              ui:ArrayFieldTemplate: ArrayTableTemplate
              items:
                type: object
                ui:ObjectFieldTemplate: TableRowTemplate
                required:
                  - name
                  - dataType
                properties:
                  name:
                    type: string
                    title: Name
                  description:
                    type: string
                    title: Description
                  dataType:
                    type: string
                    default: INT
                    title: Data Type
                    enum:
                      - TINYINT
                      - SMALLINT
                      - INT
                      - BIGINT
                      - DOUBLE
                      - DECIMAL
                      - TIMESTAMP
                      - DATE
                      - STRING
                      - TEXT
                      - CHAR
                      - VARCHAR
                      - BOOLEAN
                      - ARRAY
                  constraint:
                    type: string
                    title: Constraint
                    default: (no constraint)
                    enum:
                      - PRIMARY_KEY
                      - NOT_NULL
                      - UNIQUE
                      - (no constraint)
                allOf:
                  - if:
                      properties:
                        dataType:
                          const: ARRAY
                    then:
                      required:
                        - arrayDataType
                      properties:
                        arrayDataType:
                          title: Array Data Type
                          description: Data type of the array elements
                          type: string
                          default: INT
                          enum:
                            - TINYINT
                            - SMALLINT
                            - INT
                            - BIGINT
                            - DOUBLE
                            - DECIMAL
                            - TIMESTAMP
                            - DATE
                            - STRING
                            - TEXT
                            - CHAR
                            - VARCHAR
                            - BOOLEAN
                            - ARRAY
                      allOf:
                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: TEXT
                                  - const: VARCHAR
                                  - const: CHAR
                          then:
                            properties:
                              dataLength:
                                title: Column Length
                                type: integer
                                description: Maximum length of column row
                                default: 65535
                            required:
                              - dataLength
                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: DECIMAL
                          then:
                            properties:
                              precision:
                                title: Precision
                                type: integer
                                description: Precision of the numeric data type
                                minimum: 1
                                maximum: 38
                                default: 38
                              scale:
                                title: Scale
                                type: integer
                                description: Scale of the numeric data type; cannot be greater than precision minus 1
                                minimum: 0
                                maximum: 37
                                default: 0
                            required:
                              - precision
                              - scale
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: TEXT
                            - const: VARCHAR
                            - const: CHAR
                    then:
                      properties:
                        dataLength:
                          title: Column Length
                          type: integer
                          description: Maximum length of column row
                          default: 65535
                      required:
                        - dataLength
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: DECIMAL
                    then:
                      properties:
                        precision:
                          title: Precision
                          type: integer
                          description: Precision of the numeric data type
                          minimum: 1
                          maximum: 38
                          default: 38
                        scale:
                          title: Scale
                          type: integer
                          description: Scale of the numeric data type; cannot be greater than precision minus 1
                          minimum: 0
                          maximum: 37
                          default: 0
                      required:
                        - precision
                        - scale
                  - if: true
                    then:
                      properties:
                        businessTerms:
                          title: Business Terms
                          type: array
                          description: Multiple selection for fixed tags
                          uniqueItems: true
                          ui:style:
                            minWidth: 400
                          items:
                            type: string
                            enum:
                              - Raw
                              - Derived
                              - Metadata
                              - Identifier
                              - Dimension
                              - Fact

    - title: Provide ADLS Gen2 directory information
      description: |-
        This template will expose a folder inside an existing ADLS Gen2 Storage Account, creating the folder if not existent. 
        The **Storage Account** name will be retrieved from the Storage Area dependency output.
        
        You can leave these values empty for the meantime, but in order for the deployment to be successful, they must be filled out
      required:
        - containerName
        - folder
      properties:
        containerName:
          title: Container name
          type: object
          description: Name of the container. This container must exist when deploying this component
          ui:field: DescriptorPicker
          sourceType: field
          source: dependencies
          optionsAt: containerList
        folder:
          title: Folder specification
          type: object
          required:
            - autogeneratePath
          properties:
            autogeneratePath:
              title: Generate folder path automatically
              type: boolean
              default: true
          dependencies:
            autogeneratePath:
              oneOf:
                - properties:
                    autogeneratePath:
                      const: true
                    prefixPath:
                      title: Prefix path
                      type: string
                      description: "Optional: Specify a prefix path to prepended the autogenerated path."
                      pattern: /$
                      ui:help: If provided, it must end with a "/" character
                - required:
                    - folderPath
                  properties:
                    autogeneratePath:
                      const: false
                    folderPath:
                      title: Folder path
                      type: string
                      description: Path inside the container for the directory to be created and exposed.
                      ui:field: RegexPicker
                      pattern: ^[^/]+(?:/[^/]+)*$
                      ui:help: The path must not start or end with a "/" character
                      ui:options:
                        allowArbitraryValues: true
        format:
          type: object
          ui:options:
            displayTitle: false
          ui:ObjectFieldTemplate: HorizontalTemplate
          required:
            - fileFormat
          properties:
            fileFormat:
              title: Files format
              type: string
              description: Select the file format of data stored inside the Output Port directory. This will be shown to the end-user
              enum:
                - CSV
                - Parquet
                - DeltaLake
                - Iceberg
                - Other
          allOf:
            - if:
                properties:
                  fileFormat:
                    const: Other
                required: [ fileFormat ]
              then:
                required:
                  - otherFileFormat
                properties:
                  otherFileFormat:
                    title: Other (please specify)
                    type: string
                    description: Specify the file format of the files contained in the directory


  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./edit-skeleton
        targetPath: '.'
        values:
          name: '${{ parameters.name }}'
          description: '${{ parameters.description }}'
          domain: '${{ parameters.domain }}'
          dataproduct: '${{ parameters.dataproduct }}'
          identifier: '${{ parameters.identifier }}'
          developmentGroup: '${{ parameters.developmentGroup }}'
          dependsOn: '${{ parameters.dependencies.dependsOn }}'
          processDescription: '${{ parameters.processDescription }}'
          intervalOfChange: '${{ parameters.intervalOfChange }}'
          timeliness: '${{ parameters.timeliness }}'
          upTime: '${{ parameters.upTime }}'
          termsAndConditions: '${{ parameters.termsAndConditions }}'
          endpoint: '${{ parameters.endpoint }}'
          schemaColumns: '${{ parameters.schemaDefinition.schemaColumns }}'
          purpose: '${{ parameters.purpose }}'
          billing: '${{ parameters.billing }}'
          security: '${{ parameters.security }}'
          intendedUsage: '${{ parameters.intendedUsage }}'
          limitations: '${{ parameters.limitations }}'
          lifeCycle: '${{ parameters.lifeCycle }}'
          confidentiality: '${{ parameters.confidentiality }}'
          containerName: '${{ parameters.containerName.value }}'
          autogeneratePath: '${{ parameters.folder.autogeneratePath }}'
          prefixPath: '${{ parameters.folder.prefixPath }}'
          folderPath: '${{ parameters.folder.folderPath }}'
          fileFormat: '${{ parameters.format.fileFormat }}'
          otherFileFormat: '${{ parameters.format.otherFileFormat }}'
